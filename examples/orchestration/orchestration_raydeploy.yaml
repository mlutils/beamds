alg_image_name: fake-alg-http-server:latest
#api_token: sha256~dfymv0fOA2rC8d00ihH8N2GSlJZHuE0btauj6qJB0K4
#api_token: eyJhbGciOiJSUzI1NiIsImtpZCI6Imhtdk5nbTRoenVRenhkd0lWdnBWMUI0MmV2ZGpxMk8wQ0NaMlhmejZBc1UifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJzdGFyZmllbGQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZ2xvYmFsZHN2Yy10b2tlbi05aGRtdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJnbG9iYWxkc3ZjIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNDc0NjlmYjYtMDg4Ni00N2FiLWE1NDgtY2RiNTVjZTY2YjhlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnN0YXJmaWVsZDpnbG9iYWxkc3ZjIn0.NoA3EmgV_r9RkIoemHzoNVX6sCSjRkC_v40-8XgbBFwrf8KfbcqBk2AKuvZYocTfl09jeX9WJHL2AGJa3eaXq2eQ_Jz1LzpYMUxu2EgckFA6WNAk16LSMcAXi7S47OcrwaEmayYvkljh5CiUKV_GMCPjPYEytMcZdrjun2v6_Om61SXKnHMpmBkMnJp6O4PvEBbY3XMrowOULyWWQATfWC1NtLy_QIqfTqXOVRY7f-dRWW8WC2D6fUOapjsspJt2A3pSheSPVB1MtmVjxhmhPVJQNiVAlmvXDkF5cUVZDyFZnbzXP9v4l6izi-HSqGAcNdJx8Ry6BdWWF3MtVTdqfSipkzC5MKYSPmQJqRel_qJHxDdg-XHqrKwRqFvRY0imhLWGdxQn3xpV_uQwQjUrZ2U36hQ_6ZjzcRZ_43P-r45j0_E0T4QeY5yt_EjTUg6xR75NCiyo9WiXZPTpLvW6qDz5aW3BQCbL8Mg-f2aI8rsNCZfXhEA91P_qmdptx63VetkELtehOthDLBps5dtUFaFWlfsSH0AkvN7exd3eJxMdlDDk6ng0Jliynjy7NdzH1lkoY4oYKxIsEvnAz-JRloWW-Xq2aiuraRQL_fITiL_hHCzmDWn4rLQclgwIbV54AKIGJHZBM6MkQk_GE8cS5FDHLRWlQY60nzyJuNxOFt8
api_token: sha256~Z_T3PqnKf1uUgdqjJDp8Tx4bKI6cPgPHmdPL_tkvjxc
api_url: https://api.kh-dev.dt.local:6443
base_image: eladsar/beam:20240605
base_url: tcp://10.0.7.55:2375
# client = docker.APIClient(base_url='unix://var/run/docker.sock')
# client = docker.APIClient(base_url='tcp://10.0.7.55:2375')
# client = docker.APIClient(base_url='unix:///home/beam/.docker/run/docker.sock')
# client = docker.APIClient(base_url='unix:////home/beam/runtime/docker.sock')
beam_version: 2.6.9
body: 'Here is the cluster information:'
check_project_exists: true
command:
  arguments:
#  - -c
#  - /workspace/bash-run-scripts/entrypoint.sh --no-ray #TODO: check if can specify only arguments without executable
#  executable: /bin/bash
  executable:
cpu_limits: '4'
cpu_requests: '4'
create_service_account: false
deployment_name: prod
#enable_ray_ports: true
entrypoint_args:
- '--no-ray'
entrypoint_envs:
  TEST: test
from_email: dayotech2018@gmail.com
from_email_password: mkhdokjqwwmazyrf
gpu_limits: '1'
gpu_requests: '1'
# image_name: harbor.dt.local/public/fake-alg-http-server:latest
#image_name: None
image_name: harbor.dt.local/public/beam:20240801
#image_name: rocker/rstudio:latest
labels:
  app: prod
memory_limits: '12'
memory_requests: '12'
memory_storage_configs:
- enabled: true
  mount_path: /dev/shm
  name: dshm
  size_gb: 8
#new_image: harbor.dt.local/public/fake-alg-http-server:test1
new_image:  rocker/rstudio:latest
n_pods: '2'
node_selector:
  gpu-type: tesla-a100
project_name: starbase
# push_image: false - this is removed
ray_ports_configs:
- ray_ports:
  - 6379
  - 8265
registry_password: Har@123
registry_url: harbor.dt.local
registry_username: admin
registry_project_name: public
replicas: '1'
send_mail: false
scc_name: anyuid
security_context_config:
  add_capabilities:
#  - SYS_CHROOT
#  - CAP_AUDIT_CONTROL
#  - CAP_AUDIT_WRITE
  enable_security_context: false
  privileged: true
  runAsUser: 0
service_configs:
- create_ingress: false
  create_route: false
  ingress_host: ssh.example.com
  port: 22022
  port_name: ssh-port
  service_name: ssh
  service_type: NodePort
  annotations:
    haproxy.router.openshift.io/timeout: "599"
    haproxy.router.openshift.io/balance: "leastconn"
- create_ingress: false
  create_route: true
  ingress_host: jupyter.example.com
  port: 22088
  port_name: jupyter-port
  service_name: jupyter
  service_type: ClusterIP
- create_ingress: false
  create_route: true
  ingress_host: mlflow.example.com
  port: 22080
  port_name: port
  service_name: mlflow
  service_type: ClusterIP
- create_ingress: false
  create_route: true
  ingress_host: ray-port.example.com
  port: 6379
  port_name: port
  service_name: ray
  service_type: ClusterIP
- create_ingress: false
  create_route: true
  ingress_host: ray-port.example.com
  port: 8265
  port_name: port
  service_name: ray
  service_type: ClusterIP
- create_ingress: false
  create_route: true
  ingress_host: rstudio.example.com
  port: 8787
  port_name: port
  service_name: ray
  service_type: ClusterIP
#- create_ingress: false
#  create_route: true
#  ingress_host: home-page.example.com
#  port: 22089
#  port_name: home-page-port
#  service_name: home-page
#  service_type: ClusterIP
smtp_port: 587
smtp_server: smtp.gmail.com
storage_configs:
- create_pvc: false
  pvc_access_mode: ReadWriteMany
  pvc_mount_path: /usr/local/lib/R/site-library
  pvc_name: data-pvc
  pvc_size: '500'
subject: Cluster Deployment Information
to_email: yossi@dayo-tech.com
use_gpu: true
use_node_selector: false
use_scc: true
user_idm_configs:
- create_role_binding: false
  project_name: ben-guryon
  role_binding_name: yos
  role_name: admin
  user_name: yos
